eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka
spring:
  application:
    name: order-service
  cloud:
    discovery:
      enabled: true
  #      above line is important to resolve ip addresses in docker env

  data:
    redis:
      host: localhost
      port: 6379
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.cba.core.order.event.OrderPlacedEvent

management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s

#  retry:
#    instances:
#      inventory:
#        max-attempts: 3
#        wait-duration: 1s
